<?php

function plantright_flag($action, $flag, $content_id, $account) {
	if($action == 'flag' && $flag->name == 'nursery_flag') {
		$node = node_load($content_id);
		//dpm($node->field_surveying_user);
		$member = array();
		$member['uid'] = $account->uid;
		array_push($node->field_surveying_user, $member);
		//dpm($node->field_surveying_user);
		node_save($node);
	}
	if($action == 'unflag' && $flag->name == 'nursery_flag') {
	  $node = node_load($content_id);
	  $users = $node->field_surveying_user;
	  $node->field_surveying_user = removeElementWithValue($users, "uid", $account->uid);
	  node_save($node);
	}  
}

function removeElementWithValue($array, $key, $value){
  foreach($array as $subKey => $subArray){
    if($subArray[$key] == $value){
      unset($array[$subKey]);
    }
  }
  return $array;
}



function plantright_user($op, &$edit, &$account, $category = NULL) {
  if ($op == 'login') {
    //dpm($account);
    //dpm($edit);
  }
}

function plantright_nodeapi(&$node, $op) {
  // When retail manager creates a Retailer, set the association
  if ($node->type == 'business' && $op == 'insert') {
    $retail_member = node_load(array('uid' => $node->uid, 'type' => 'retail_member'));
    $retail_member->field_retailer[0]['nid'] = $node->nid;
    node_save($retail_member);
  }
}

function _plantright_login_action(&$form, &$form_state) {
  global $user;
  $rids = array_keys($user->roles);
  // if a Retailer member,
  if (in_array(7, $rids) || 
      in_array(8, $rids) || 
      in_array(9, $rids) || in_array(10, $rids)) {
    drupal_goto("user/$user->uid");

  }
//  $node = node_load(array('uid' => $account->uid, 'type' => 'retail_member'));
//  $rids = array_keys($user->roles);
//  //If a manager and hasn't registered a store, redirect to node/add/business form
//  if ($node->field_retailer[0]['nid'] == NULL) {
//    if (in_array(7, $rids) || in_array(8, $rids)) {
//      $form_state['redirect'] = 'node/add/business';
//    }
//  }
//  //If an employee, handle that
//  if (in_array(9, $rids) || in_array(10, $rids)) {
//    // If verified, go to resources
//    if (in_array(11, $rids)) {
//      drupal_goto('partner-resources');
//    } else {
//      // If not verified, go to training
//      drupal_goto('plantright-101-training');
//    }
//  }
}


function plantright_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'user_register') {
    $form['account']['mail']['#description'] = 'A valid e-mail address. All e-mails from the system will be sent to this address.<br />
      The e-mail address is not made public and your information will not be sold, or shared with others.';
    return $form;
  }
  if ($form_id == 'user_login' || $form_id == 'user_login_block') {
    $form['#action'] = NULL;
    $form['#submit'] = array('_plantright_login_action');
  }
  if ($form_id == 'user_pass_reset') {
    $form['#redirect'] = 'user';
  }
  if ($form_id == 'node_form' && $form['type'] == 'retail_member') {
    $form['contact']['#prefix'] = '<div class="contact-info">';
    $form['contact']['#suffix'] = '</div>';
  } 
  if ($form_id == 'business_node_form') {
    $form['#redirect'] = 'invite';
  }
  if ($form_id == 'invite_form') {
    drupal_set_message('<p>This is a good place to put some intro copy for managers to let them know what they\'re supposed to here.  Can we come up with that?');
  }
  //dpm($form);
}


function plantright_menu_alter(&$items) {
  $items['user/reset/%/%/%'] = array(
    'title' => 'Reset password',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('plantright_user_pass_reset', 2, 3, 4),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
}

/**
 * Menu callback; process one time login link and redirects to the user page on success.
 */
function plantright_user_pass_reset(&$form_state, $uid, $timestamp, $hashed_pass, $action = NULL) {
  global $user;

  // Check if the user is already logged in. The back button is often the culprit here.
  if ($user->uid) {
    drupal_set_message(t('You have already used this one-time login link. It is not necessary to use this link to login anymore. You are already logged in.'));
    drupal_goto();
  }
  else {
    // Time out, in seconds, until login URL expires. 24 hours = 86400 seconds.
    $timeout = 86400;
    $current = time();
    // Some redundant checks for extra security ?
    if ($timestamp < $current && $account = user_load(array('uid' => $uid, 'status' => 1)) ) {
      // Deny one-time login to blocked accounts.
      if (drupal_is_denied('user', $account->name) || drupal_is_denied('mail', $account->mail)) {
        drupal_set_message(t('You have tried to use a one-time login for an account which has been blocked.'), 'error');
        drupal_goto();
      }

      // No time out for first time login.
      if ($account->login && $current - $timestamp > $timeout) {
        drupal_set_message(t('You have tried to use a one-time login link that has expired. Please request a new one using the form below.'));
        drupal_goto('user/password');
      }
      else if ($account->uid && $timestamp > $account->login && $timestamp < $current && $hashed_pass == user_pass_rehash($account->pass, $timestamp, $account->login)) {
        // First stage is a confirmation form, then login
        if ($action == 'login') {
          watchdog('user', 'User %name used one-time login link at time %timestamp.', array('%name' => $account->name, '%timestamp' => $timestamp));
          // Set the new user.
          $user = $account;
          // user_authenticate_finalize() also updates the login timestamp of the
          // user, which invalidates further use of the one-time login link.
          user_authenticate_finalize($form_state['values']);
          drupal_set_message(t('You have just used your one-time login link. It is no longer necessary to use this link to login.'));
          $rids = array_keys($user->roles);
          if (in_array(7, $rids) || in_array(8, $rids) || in_array(9, $rids) || in_array(10, $rids)) {
            $node = node_load(array('type' => 'retail_member', 'uid' => $user->uid));
            drupal_set_message('Reset your password so you don\'t forget it!', 'status');
            drupal_goto('node/' . $node->nid . '/edit');
          } else {
            drupal_goto('user/' . $user->uid);
          }
        }
        else {
          $form['message'] = array('#value' => t('<p>This is a one-time login for %user_name and will expire on %expiration_date.</p><p>Click on this button to login to the site and change your password.</p>', array('%user_name' => $account->name, '%expiration_date' => format_date($timestamp + $timeout))));
          $form['help'] = array('#value' => '<p>'. t('This login can be used only once.') .'</p>');
          $form['submit'] = array('#type' => 'submit', '#value' => t('Log in'));
          $form['#action'] = url("user/reset/$uid/$timestamp/$hashed_pass/login");
          return $form;
        }
      }
      else {
        drupal_set_message(t('You have tried to use a one-time login link which has either been used or is no longer valid. Please request a new one using the form below.'));
        drupal_goto('user/password');
      }
    }
    else {
      // Deny access, no more clues.
      // Everything will be in the watchdog's URL for the administrator to check.
      drupal_access_denied();
    }
  }
}



