<?php

/**
 * hook_nodeapi().
 */
function plantright_sf_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  switch ($op) {
    case 'presave':
      if ($node->type == 'business') {
        if (empty($node->field_sf_opp_name[0]['value'])) {
          $node->field_sf_opp_name[0]['value'] = $node->title . '-' . date('Y');
        }

        $results = db_query('select * from {content_type_retail_member} rm
                         inner join node n on n.nid = rm.nid
                         inner join users u on n.uid = u.uid
                         where rm.field_retailer_nid = %d', $node->nid);

        $buyer_count = $node->field_number_of_buyers[0]['value'];

        $graduate_count = 0;
        while ($result = db_fetch_object($results)) {
          $account = user_load($result->uid);
          $rids = array_keys($account->roles);
          // If the user is a buyer and passed the quiz.
          if ((in_array(7, $rids) || in_array(9, $rids)) && in_array(11, $rids)) {
            $graduate_count++;
          }
        }

        if ($graduate_count >= $buyer_count) {
          $node->field_sf_opp_stage[0]['value'] = 'Closed Won';
        }
      }
      break;
  }
}

/**
 * Implementation of hook_fieldmap_objects_alter().
 */
function plantright_sf_fieldmap_objects_alter(&$objects) {
  // Indicator for primary contact on node retail member.
  $objects['drupal']['node_retail_member']['fields']['is_primary'] = array(
    'label' => t('Is Primary'),
    'export' => '_plantright_sf_export_primary',
    'import' => '_plantright_sf_import_primary',
  );

  // Retail member gets its own contact ID from mapping.
  $objects['drupal']['node_retail_member']['fields']['sf_contact_id'] = array(
    'label' => t('SF Contact ID'),
    'export' => '_plantright_sf_export_retail_member_sf_contact_id',
    'import' => '_plantright_sf_import_retail_member_sf_contact_id',
  );

  // Retail member gets its own contact ID from mapping.
  $objects['drupal']['node_retail_member']['fields']['sf_opp_id'] = array(
    'label' => t('SF Opportunity ID'),
    'export' => '_plantright_sf_export_retail_member_sf_opp_id',
    'import' => '_plantright_sf_import_retail_member_sf_opp_id',
  );

  // Retail member's graduate status.
  $objects['drupal']['node_retail_member']['fields']['graduate_status'] = array(
    'label' => t('Graduate Status'),
    'export' => '_plantright_sf_export_retail_member_graduate_status',
    'import' => '_plantright_sf_import_retail_member_graduate_status',
  );

  // Retail member buy or nonbuyer.
  $objects['drupal']['node_retail_member']['fields']['buyer_role'] = array(
    'label' => t('Buyer Status'),
    'export' => '_plantright_sf_export_retail_member_buyer_role',
    'import' => '_plantright_sf_import_retail_member_buyer_role',
  );

  // Retailer get its own Account ID from mapping.
  $objects['drupal']['node_business']['fields']['sf_account_id'] = array(
    'label' => t('SF Account ID'),
    'export' => '_plantright_sf_export_business_sf_account_id',
    'import' => '_plantright_sf_import_business_sf_account_id',
  );

  // Retailer get its own Opportunity ID from mapping.
  $objects['drupal']['node_business']['fields']['sf_opp_id'] = array(
    'label' => t('SF Stage Name'),
    'export' => '_plantright_sf_export_business_sf_opp_id',
    'import' => '_plantright_sf_import_business_sf_opp_id',
  );

  $objects['drupal']['node_business']['fields']['graduates_buyers'] = array(
    'label' => t('Number of buyer graduates'),
    'export' => '_plantright_sf_export_business_graduates_buyers',
    'import' => '_plantright_sf_import_business_graduates_buyers',
  );

  $objects['drupal']['node_business']['fields']['graduates_all'] = array(
    'label' => t('Number of all graduates'),
    'export' => '_plantright_sf_export_business_graduates_all',
    'import' => '_plantright_sf_import_business_graduates_all',
  );
}

/**
 * Callback for is primary indicator on retail member node.
 */
function _plantright_sf_export_primary($node, $fieldname, $drupal_field_definition, $sf_field_definition) {
  // Determine if the user is the node author of their own retailer.
  $profile = $node;
  if ($profile->{PLANTRIGHT_RETAIL_PROFILE_NURSERY} && isset($profile->{PLANTRIGHT_RETAIL_PROFILE_NURSERY}[0]) && $nursery_nid = $profile->{PLANTRIGHT_RETAIL_PROFILE_NURSERY}[0]['nid']) {
    $nursery = node_load($nursery_nid);

    if ($nursery && $nursery->uid == $profile->uid) {
      return TRUE;
    }
    else {
      return FALSE;
    }
  }
}

function _plantright_sf_import_primary(&$node, $drupal_fieldname, $drupal_field_definition, $sf_data, $sf_fieldname, $sf_field_definition) {
  // No import.
}

/**
 * Callback for contact ID
 */
function _plantright_sf_export_retail_member_sf_contact_id($node, $fieldname, $drupal_field_definition, $sf_field_definition) {
  // Get current salesforce mapping.
  return plantright_sf_get_sfid('node_retail_member', 'Contact', $node);

  //$salesforce = salesforce_api_id_load('node', $node->nid);
  //return $salesforce->sfid;
}

function _plantright_sf_import_retail_member_sf_contact_id(&$node, $drupal_fieldname, $drupal_field_definition, $sf_data, $sf_fieldname, $sf_field_definition) {
  // No import.
}

function _plantright_sf_export_retail_member_sf_opp_id($node, $fieldname, $drupal_field_definition, $sf_field_definition) {
  $retailer_node = node_load($node->field_retailer[0]['nid']);
  if (!$retailer_node) {
    return '';
  }
  return plantright_sf_get_sfid('node_business', 'Opportunity', $retailer_node);
}

function _plantright_sf_import_retail_member_sf_opp_id(&$node, $drupal_fieldname, $drupal_field_definition, $sf_data, $sf_fieldname, $sf_field_definition) {
  // No import.
}

function _plantright_sf_export_retail_member_graduate_status($node, $fieldname, $drupal_field_definition, $sf_field_definition) {
  $account = user_load($node->uid);
  $roles = array_keys($account->roles);
  // User has the role for passing quiz.
  if (in_array(11, $roles)) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

function _plantright_sf_import_retail_member_graduate_status(&$node, $drupal_fieldname, $drupal_field_definition, $sf_data, $sf_fieldname, $sf_field_definition) {
  // No import.
}

function _plantright_sf_export_retail_member_buyer_role($node, $fieldname, $drupal_field_definition, $sf_field_definition) {
  $account = user_load($node->uid);
  $roles = array_keys($account->roles);
  // User has the role for passing quiz.
  if (in_array(7, $roles) || in_array(9, $roles)) {
    return 'Buyer';
  }
  else {
    return 'Non-buyer';
  }
}

function _plantright_sf_import_retail_member_buyer_role(&$node, $drupal_fieldname, $drupal_field_definition, $sf_data, $sf_fieldname, $sf_field_definition) {
  // No import.
}

/**
 * Callback for account ID
 */
function _plantright_sf_export_business_sf_account_id($node, $fieldname, $drupal_field_definition, $sf_field_definition) {
  // Get current salesforce mapping.
  return plantright_sf_get_sfid('node_business', 'Account', $node);

  //$salesforce = salesforce_api_id_load('node', $node->nid);
  //return $salesforce->sfid;
}

function _plantright_sf_import_business_sf_account_id(&$node, $drupal_fieldname, $drupal_field_definition, $sf_data, $sf_fieldname, $sf_field_definition) {
  // No import.
}

/**
 * Callback for Opportunity ID
 */
function _plantright_sf_export_business_sf_opp_id($node, $fieldname, $drupal_field_definition, $sf_field_definition) {
  return plantright_sf_get_sfid('node_business', 'Opportunity', $node);
}

function _plantright_sf_import_business_sf_opp_id(&$node, $drupal_fieldname, $drupal_field_definition, $sf_data, $sf_fieldname, $sf_field_definition) {
  // No import.
}

/**
 * Callback for buyer graduates.
 */
function _plantright_sf_export_business_graduates_buyers($node, $fieldname, $drupal_field_definition, $sf_field_definition) {
  $results = db_query('select * from {content_type_retail_member} rm
                         inner join node n on n.nid = rm.nid
                         inner join users u on n.uid = u.uid
                         where rm.field_retailer_nid = %d', $node->nid);

  $graduate_count = 0;
  while ($result = db_fetch_object($results)) {
    $account = user_load($result->uid);
    $rids = array_keys($account->roles);
    // If the user is a buyer and passed the quiz.
    if ((in_array(7, $rids) || in_array(9, $rids)) && in_array(11, $rids)) {
      $graduate_count++;
    }
  }

  return $graduate_count;
}

function _plantright_sf_import_business_graduates_buyers(&$node, $drupal_fieldname, $drupal_field_definition, $sf_data, $sf_fieldname, $sf_field_definition) {
  // No import.
}

/**
 * Callback for all graduates.
 */
function _plantright_sf_export_business_graduates_all($node, $fieldname, $drupal_field_definition, $sf_field_definition) {
  $results = db_query('select * from {content_type_retail_member} rm
                         inner join node n on n.nid = rm.nid
                         inner join users u on n.uid = u.uid
                         where rm.field_retailer_nid = %d', $node->nid);

  $graduate_count = 0;
  while ($result = db_fetch_object($results)) {
    $account = user_load($result->uid);
    $rids = array_keys($account->roles);
    // If the user passed the quiz.
    if (in_array(11, $rids)) {
      $graduate_count++;
    }
  }

  return $graduate_count;
}

function _plantright_sf_import_business_graduates_all(&$node, $drupal_fieldname, $drupal_field_definition, $sf_data, $sf_fieldname, $sf_field_definition) {
  // No import.
}

/**
 * Helper function for the ID fields above.
 */
function plantright_sf_get_sfid($drupal, $salesforce, $node) {
  $conditions = array(
    'drupal' => $drupal,
    'salesforce' => $salesforce,
  );
  $maps = salesforce_api_salesforce_field_map_load_by($conditions);
  $map = array_shift($maps);

  // Query the main ID table for the associated data.
  $data = db_fetch_object(db_query("SELECT sfid, name FROM {salesforce_object_map} WHERE name = '%s' AND oid = %d", $map->name, $node->nid));
  if ($data) {
    return $data->sfid;
  }
  else {
    return '';
  }
}
